<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/datasource.properties</value>
			</list>
		</property>
	</bean>
	<!-- <beans:bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<beans:property name="driverClassName" value="${jdbc.driverClass}" />
		<beans:property name="url" value="${jdbc.jdbcUrl}" />
		<beans:property name="username" value="${jdbc.user}" />
		<beans:property name="password" value="${jdbc.password}" />
		<beans:property name="removeAbandoned" value="true" />
		<beans:property name="removeAbandonedTimeoutMillis"
			value="300000" />
		<beans:property name="defaultAutoCommit" value="true" />
		初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
		<beans:property name="initialSize" value="${initialSize}" />
		最小连接池数量
		<beans:property name="minIdle" value="${minIdle}" />
		最大连接池数量
		<beans:property name="maxActive" value="${maxActive}" />
		获取连接时最大等待时间，单位毫秒
		<beans:property name="maxWait" value="${maxWait}" />
		配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
		<beans:property name="timeBetweenEvictionRunsMillis"
			value="${timeBetweenEvictionRunsMillis}" />
		配置一个连接在池中最小生存的时间，单位是毫秒
		<beans:property name="minEvictableIdleTimeMillis"
			value="${minEvictableIdleTimeMillis}" />
		<beans:property name="validationQuery" value="SELECT 'x'" />
		建议配置为true，不影响性能，并且保证安全性
		<beans:property name="testWhileIdle" value="${testWhileIdle}" />
		申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
		<beans:property name="testOnBorrow" value="${testOnBorrow}" />
		归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
		<beans:property name="testOnReturn" value="${testOnReturn}" />
		<beans:property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}" />
	</beans:bean>

	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice> -->

	<!-- <aop:aspectj-autoproxy /> <aop:config proxy-target-class="true"> <aop:advisor 
		advice-ref="txAdvice" pointcut="execution(* com.dcloud.service.**.*Service.*(..))" 
		/> </aop:config> -->


	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClass}" />
		<property name="url" value="${jdbc.jdbcUrl}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
	</beans:bean>
	<!-- 配置Jdbc模板 -->
	<beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</beans:bean>
	<!-- 配置事务管理器 -->
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</beans:bean>
</beans>