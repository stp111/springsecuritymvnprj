<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	
	<!-- v3.1 后， filter='none' 改为 security="none"-->
	<http pattern="/static/**" security="none"/>
	
	<http auto-config="true" use-expressions="true" >
		<intercept-url pattern="/users*" method="GET"
			access="hasAnyRole('ROLE_USER','ROLE_GUEST')" />
		<intercept-url pattern="/user/*" method="GET" access="hasRole('ROLE_USER')" />
		<intercept-url pattern="/user/*" method="POST" access="hasRole('admin')" />
		<intercept-url pattern="/getuser/*" method="GET" access="hasRole('admin')" />
		<anonymous username="guest" granted-authority="ROLE_GUEST" />

		<!-- v1: 定义form login模式 -->
		<!-- <form-login></form-login> -->

		<!-- v2: 配置定义自己的login界面 -->
		<form-login login-page="/mylogin.jsp"
			authentication-failure-url="/mylogin.jsp?err=true"
			default-target-url="/user/8" />
	</http>

	<!-- <authentication-manager> <authentication-provider> <user-service> <user 
		name="admin" password="secret" authorities="ROLE_ADMIN,ROLE_USER" /> <user 
		name="user1" password="1111" authorities="ROLE_USER" /> </user-service> </authentication-provider> 
		</authentication-manager> -->

	
	<!-- v3: 使用自己的数据库 -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="select username, password, case status when 1 then 'true' else 'false' end as enabled from user where name=?"
				authorities-by-username-query="select u.username, r.rolename as authorities from user u, user_role r where u.id = r.userid and u.name = ? " />
		</authentication-provider>
	</authentication-manager>

</beans:beans>